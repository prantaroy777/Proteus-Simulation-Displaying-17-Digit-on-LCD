
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\EEE 366\new\Debug\List\ad 7 sag.asm Tue Jul 05 12:58:41 2022

C:\Users\Asus\Desktop\EEE 366\new\Debug\List\ad 7 sag.asm(1083): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\EEE 366\new\Debug\List\ad 7 sag.asm(1084): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\EEE 366\new\Debug\List\ad 7 sag.asm(1085): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.42 Evaluation
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0044 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 0031
000034 0034
000035 0037
000036 002a      	.DB  0x31,0x0,0x34,0x0,0x37,0x0,0x2A,0x0
000037 0032
000038 0035
000039 0038
00003a 0030      	.DB  0x32,0x0,0x35,0x0,0x38,0x0,0x30,0x0
00003b 0033
00003c 0036
00003d 0039
00003e 0023      	.DB  0x33,0x0,0x36,0x0,0x39,0x0,0x23,0x0
                 _0x2000003:
00003f c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000040 0002      	.DW  0x02
000041 0260      	.DW  __base_y_G100
000042 007e      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000043 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000044 94f8      	CLI
000045 27ee      	CLR  R30
000046 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000047 e0f1      	LDI  R31,1
000048 bffb      	OUT  GICR,R31
000049 bfeb      	OUT  GICR,R30
00004a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004b e08d      	LDI  R24,(14-2)+1
00004c e0a2      	LDI  R26,2
00004d 27bb      	CLR  R27
                 __CLEAR_REG:
00004e 93ed      	ST   X+,R30
00004f 958a      	DEC  R24
000050 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000051 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000052 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000053 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000054 93ed      	ST   X+,R30
000055 9701      	SBIW R24,1
000056 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000057 e8e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000058 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000059 9185      	LPM  R24,Z+
00005a 9195      	LPM  R25,Z+
00005b 9700      	SBIW R24,0
00005c f061      	BREQ __GLOBAL_INI_END
00005d 91a5      	LPM  R26,Z+
00005e 91b5      	LPM  R27,Z+
00005f 9005      	LPM  R0,Z+
000060 9015      	LPM  R1,Z+
000061 01bf      	MOVW R22,R30
000062 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000063 9005      	LPM  R0,Z+
000064 920d      	ST   X+,R0
000065 9701      	SBIW R24,1
000066 f7e1      	BRNE __GLOBAL_INI_LOOP
000067 01fb      	MOVW R30,R22
000068 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000069 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006a bfed      	OUT  SPL,R30
00006b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006f 940c 0071 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 000F {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0010 char x=0;
                 ; 0000 0011 int del=300;
                 ; 0000 0012 keypad_ddr=0xF0;
                 ;	x -> R17
                 ;	del -> R18,R19
000071 e010      	LDI  R17,0
                +
000072 e22c     +LDI R18 , LOW ( 300 )
000073 e031     +LDI R19 , HIGH ( 300 )
                 	__GETWRN 18,19,300
000074 efe0      	LDI  R30,LOW(240)
000075 bbe4      	OUT  0x14,R30
                 ; 0000 0013 lcd_init(16);
000076 e1a0      	LDI  R26,LOW(16)
000077 d0d5      	RCALL _lcd_init
                 ; 0000 0014 
                 ; 0000 0015 while (1)
                 _0x3:
                 ; 0000 0016 {
                 ; 0000 0017 keypad_port=0b11101111;
000078 eeef      	LDI  R30,LOW(239)
000079 bbe5      	OUT  0x15,R30
                 ; 0000 0018 if (input_data.0==0){
00007a 9998      	SBIC 0x13,0
00007b c007      	RJMP _0x6
                 ; 0000 0019 lcd_gotoxy(x,0);
00007c 931a      	ST   -Y,R17
00007d e0a0      	LDI  R26,LOW(0)
00007e d090      	RCALL _lcd_gotoxy
                 ; 0000 001A lcd_putsf("1");
                +
00007f e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000080 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000081 d0f6      	RCALL SUBOPT_0x0
                 ; 0000 001B delay_ms(del);
                 ; 0000 001C x++;
                 ; 0000 001D input_data.0=1;
000082 9a98      	SBI  0x13,0
                 ; 0000 001E }
                 ; 0000 001F if (input_data.1==0){
                 _0x6:
000083 9999      	SBIC 0x13,1
000084 c007      	RJMP _0x9
                 ; 0000 0020 lcd_gotoxy(x,0);
000085 931a      	ST   -Y,R17
000086 e0a0      	LDI  R26,LOW(0)
000087 d087      	RCALL _lcd_gotoxy
                 ; 0000 0021 lcd_putsf("4");
                +
000088 e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 2 ) )
000089 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW2FN _0x0,2
00008a d0ed      	RCALL SUBOPT_0x0
                 ; 0000 0022 delay_ms(del);
                 ; 0000 0023 x++;
                 ; 0000 0024 input_data.1=1;
00008b 9a99      	SBI  0x13,1
                 ; 0000 0025 }
                 ; 0000 0026 if (input_data.2==0){
                 _0x9:
00008c 999a      	SBIC 0x13,2
00008d c007      	RJMP _0xC
                 ; 0000 0027 lcd_gotoxy(x,0);
00008e 931a      	ST   -Y,R17
00008f e0a0      	LDI  R26,LOW(0)
000090 d07e      	RCALL _lcd_gotoxy
                 ; 0000 0028 lcd_putsf("7");
                +
000091 e6aa     +LDI R26 , LOW ( 2 * _0x0 + ( 4 ) )
000092 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW2FN _0x0,4
000093 d0e4      	RCALL SUBOPT_0x0
                 ; 0000 0029 delay_ms(del);
                 ; 0000 002A x++;
                 ; 0000 002B input_data.2=1;
000094 9a9a      	SBI  0x13,2
                 ; 0000 002C }
                 ; 0000 002D if (input_data.3==0){
                 _0xC:
000095 999b      	SBIC 0x13,3
000096 c007      	RJMP _0xF
                 ; 0000 002E lcd_gotoxy(x,0);
000097 931a      	ST   -Y,R17
000098 e0a0      	LDI  R26,LOW(0)
000099 d075      	RCALL _lcd_gotoxy
                 ; 0000 002F lcd_putsf("*");
                +
00009a e6ac     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
00009b e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
00009c d0db      	RCALL SUBOPT_0x0
                 ; 0000 0030 delay_ms(del);
                 ; 0000 0031 x++;
                 ; 0000 0032 input_data.3=1;
00009d 9a9b      	SBI  0x13,3
                 ; 0000 0033 }
                 ; 0000 0034 
                 ; 0000 0035 keypad_port=0b11011111;
                 _0xF:
00009e edef      	LDI  R30,LOW(223)
00009f bbe5      	OUT  0x15,R30
                 ; 0000 0036 if (input_data.0==0){
0000a0 9998      	SBIC 0x13,0
0000a1 c007      	RJMP _0x12
                 ; 0000 0037 lcd_gotoxy(x,0);
0000a2 931a      	ST   -Y,R17
0000a3 e0a0      	LDI  R26,LOW(0)
0000a4 d06a      	RCALL _lcd_gotoxy
                 ; 0000 0038 lcd_putsf("2");
                +
0000a5 e6ae     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
0000a6 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
0000a7 d0d0      	RCALL SUBOPT_0x0
                 ; 0000 0039 delay_ms(del);
                 ; 0000 003A x++;
                 ; 0000 003B input_data.0=1;
0000a8 9a98      	SBI  0x13,0
                 ; 0000 003C }
                 ; 0000 003D if (input_data.1==0){
                 _0x12:
0000a9 9999      	SBIC 0x13,1
0000aa c007      	RJMP _0x15
                 ; 0000 003E lcd_gotoxy(x,0);
0000ab 931a      	ST   -Y,R17
0000ac e0a0      	LDI  R26,LOW(0)
0000ad d061      	RCALL _lcd_gotoxy
                 ; 0000 003F lcd_putsf("5");
                +
0000ae e7a0     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
0000af e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
0000b0 d0c7      	RCALL SUBOPT_0x0
                 ; 0000 0040 delay_ms(del);
                 ; 0000 0041 x++;
                 ; 0000 0042 input_data.1=1;
0000b1 9a99      	SBI  0x13,1
                 ; 0000 0043 }
                 ; 0000 0044 if (input_data.2==0){
                 _0x15:
0000b2 999a      	SBIC 0x13,2
0000b3 c007      	RJMP _0x18
                 ; 0000 0045 lcd_gotoxy(x,0);
0000b4 931a      	ST   -Y,R17
0000b5 e0a0      	LDI  R26,LOW(0)
0000b6 d058      	RCALL _lcd_gotoxy
                 ; 0000 0046 lcd_putsf("8");
                +
0000b7 e7a2     +LDI R26 , LOW ( 2 * _0x0 + ( 12 ) )
0000b8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW2FN _0x0,12
0000b9 d0be      	RCALL SUBOPT_0x0
                 ; 0000 0047 delay_ms(del);
                 ; 0000 0048 x++;
                 ; 0000 0049 input_data.2=1;
0000ba 9a9a      	SBI  0x13,2
                 ; 0000 004A }
                 ; 0000 004B if (input_data.3==0){
                 _0x18:
0000bb 999b      	SBIC 0x13,3
0000bc c007      	RJMP _0x1B
                 ; 0000 004C lcd_gotoxy(x,0);
0000bd 931a      	ST   -Y,R17
0000be e0a0      	LDI  R26,LOW(0)
0000bf d04f      	RCALL _lcd_gotoxy
                 ; 0000 004D lcd_putsf("0");
                +
0000c0 e7a4     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
0000c1 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
0000c2 d0b5      	RCALL SUBOPT_0x0
                 ; 0000 004E delay_ms(del);
                 ; 0000 004F x++;
                 ; 0000 0050 input_data.3=1;
0000c3 9a9b      	SBI  0x13,3
                 ; 0000 0051 }
                 ; 0000 0052 
                 ; 0000 0053 keypad_port=0b10111111;
                 _0x1B:
0000c4 ebef      	LDI  R30,LOW(191)
0000c5 bbe5      	OUT  0x15,R30
                 ; 0000 0054 if (input_data.0==0){
0000c6 9998      	SBIC 0x13,0
0000c7 c007      	RJMP _0x1E
                 ; 0000 0055 lcd_gotoxy(x,0);
0000c8 931a      	ST   -Y,R17
0000c9 e0a0      	LDI  R26,LOW(0)
0000ca d044      	RCALL _lcd_gotoxy
                 ; 0000 0056 lcd_putsf("3");
                +
0000cb e7a6     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
0000cc e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
0000cd d0aa      	RCALL SUBOPT_0x0
                 ; 0000 0057 delay_ms(del);
                 ; 0000 0058 x++;
                 ; 0000 0059 input_data.0=1;
0000ce 9a98      	SBI  0x13,0
                 ; 0000 005A }
                 ; 0000 005B if (input_data.1==0){
                 _0x1E:
0000cf 9999      	SBIC 0x13,1
0000d0 c007      	RJMP _0x21
                 ; 0000 005C lcd_gotoxy(x,0);
0000d1 931a      	ST   -Y,R17
0000d2 e0a0      	LDI  R26,LOW(0)
0000d3 d03b      	RCALL _lcd_gotoxy
                 ; 0000 005D lcd_putsf("6");
                +
0000d4 e7a8     +LDI R26 , LOW ( 2 * _0x0 + ( 18 ) )
0000d5 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW2FN _0x0,18
0000d6 d0a1      	RCALL SUBOPT_0x0
                 ; 0000 005E delay_ms(del);
                 ; 0000 005F x++;
                 ; 0000 0060 input_data.1=1;
0000d7 9a99      	SBI  0x13,1
                 ; 0000 0061 }
                 ; 0000 0062 if (input_data.2==0){
                 _0x21:
0000d8 999a      	SBIC 0x13,2
0000d9 c007      	RJMP _0x24
                 ; 0000 0063 lcd_gotoxy(x,0);
0000da 931a      	ST   -Y,R17
0000db e0a0      	LDI  R26,LOW(0)
0000dc d032      	RCALL _lcd_gotoxy
                 ; 0000 0064 lcd_putsf("9");
                +
0000dd e7aa     +LDI R26 , LOW ( 2 * _0x0 + ( 20 ) )
0000de e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW2FN _0x0,20
0000df d098      	RCALL SUBOPT_0x0
                 ; 0000 0065 delay_ms(del);
                 ; 0000 0066 x++;
                 ; 0000 0067 input_data.2=1;
0000e0 9a9a      	SBI  0x13,2
                 ; 0000 0068 }
                 ; 0000 0069 if (input_data.3==0){
                 _0x24:
0000e1 999b      	SBIC 0x13,3
0000e2 c007      	RJMP _0x27
                 ; 0000 006A lcd_gotoxy(x,0);
0000e3 931a      	ST   -Y,R17
0000e4 e0a0      	LDI  R26,LOW(0)
0000e5 d029      	RCALL _lcd_gotoxy
                 ; 0000 006B lcd_putsf("#");
                +
0000e6 e7ac     +LDI R26 , LOW ( 2 * _0x0 + ( 22 ) )
0000e7 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW2FN _0x0,22
0000e8 d08f      	RCALL SUBOPT_0x0
                 ; 0000 006C delay_ms(del);
                 ; 0000 006D x++;
                 ; 0000 006E input_data.3=1;
0000e9 9a9b      	SBI  0x13,3
                 ; 0000 006F }
                 ; 0000 0070 }
                 _0x27:
0000ea cf8d      	RJMP _0x3
                 ; 0000 0071 }
                 _0x2A:
0000eb cfff      	RJMP _0x2A
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000ec 931a      	ST   -Y,R17
0000ed 2f1a      	MOV  R17,R26
0000ee b3eb      	IN   R30,0x1B
0000ef 70ef      	ANDI R30,LOW(0xF)
0000f0 2fae      	MOV  R26,R30
0000f1 2fe1      	MOV  R30,R17
0000f2 7fe0      	ANDI R30,LOW(0xF0)
0000f3 2bea      	OR   R30,R26
0000f4 bbeb      	OUT  0x1B,R30
                +
0000f5 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000f6 958a     +DEC R24
0000f7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0000f8 9ada      	SBI  0x1B,2
                +
0000f9 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000fa 958a     +DEC R24
0000fb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0000fc 98da      	CBI  0x1B,2
                +
0000fd e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0000fe 958a     +DEC R24
0000ff f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000100 c075      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000101 93aa      	ST   -Y,R26
000102 81a8      	LD   R26,Y
000103 dfe8      	RCALL __lcd_write_nibble_G100
000104 81e8          ld    r30,y
000105 95e2          swap  r30
000106 83e8          st    y,r30
000107 81a8      	LD   R26,Y
000108 dfe3      	RCALL __lcd_write_nibble_G100
                +
000109 ec88     +LDI R24 , LOW ( 200 )
00010a e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00010b 9701     +SBIW R24 , 1
00010c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00010d 9621      	ADIW R28,1
00010e 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00010f 931a      	ST   -Y,R17
000110 930a      	ST   -Y,R16
000111 2f1a      	MOV  R17,R26
000112 810a      	LDD  R16,Y+2
000113 2fe1      	MOV  R30,R17
000114 e0f0      	LDI  R31,0
000115 5ae0      	SUBI R30,LOW(-__base_y_G100)
000116 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000117 81e0      	LD   R30,Z
000118 0fe0      	ADD  R30,R16
000119 2fae      	MOV  R26,R30
00011a dfe6      	RCALL __lcd_write_data
00011b 2e50      	MOV  R5,R16
00011c 2e41      	MOV  R4,R17
00011d 8119      	LDD  R17,Y+1
00011e 8108      	LDD  R16,Y+0
00011f 9623      	ADIW R28,3
000120 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000121 e0a2      	LDI  R26,LOW(2)
000122 d05a      	RCALL SUBOPT_0x1
000123 e0ac      	LDI  R26,LOW(12)
000124 dfdc      	RCALL __lcd_write_data
000125 e0a1      	LDI  R26,LOW(1)
000126 d056      	RCALL SUBOPT_0x1
000127 e0e0      	LDI  R30,LOW(0)
000128 2e4e      	MOV  R4,R30
000129 2e5e      	MOV  R5,R30
00012a 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00012b 931a      	ST   -Y,R17
00012c 2f1a      	MOV  R17,R26
00012d 301a      	CPI  R17,10
00012e f011      	BREQ _0x2000005
00012f 1457      	CP   R5,R7
000130 f038      	BRLO _0x2000004
                 _0x2000005:
000131 e0e0      	LDI  R30,LOW(0)
000132 93ea      	ST   -Y,R30
000133 9443      	INC  R4
000134 2da4      	MOV  R26,R4
000135 dfd9      	RCALL _lcd_gotoxy
000136 301a      	CPI  R17,10
000137 f1f1      	BREQ _0x2080001
                 _0x2000004:
000138 9453      	INC  R5
000139 9ad8      	SBI  0x1B,0
00013a 2fa1      	MOV  R26,R17
00013b dfc5      	RCALL __lcd_write_data
00013c 98d8      	CBI  0x1B,0
00013d c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
00013e d049      	RCALL __SAVELOCR4
00013f 019d      	MOVW R18,R26
                 _0x200000B:
000140 01f9      	MOVW R30,R18
                +
000141 5f2f     +SUBI R18 , LOW ( - 1 )
000142 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000143 91e4      	LPM  R30,Z
000144 2f1e      	MOV  R17,R30
000145 30e0      	CPI  R30,0
000146 f019      	BREQ _0x200000D
000147 2fa1      	MOV  R26,R17
000148 dfe2      	RCALL _lcd_putchar
000149 cff6      	RJMP _0x200000B
                 _0x200000D:
00014a d042      	RCALL __LOADLOCR4
00014b 9624      	ADIW R28,4
00014c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00014d 931a      	ST   -Y,R17
00014e 2f1a      	MOV  R17,R26
00014f b3ea      	IN   R30,0x1A
000150 6fe0      	ORI  R30,LOW(0xF0)
000151 bbea      	OUT  0x1A,R30
000152 9ad2      	SBI  0x1A,2
000153 9ad0      	SBI  0x1A,0
000154 9ad1      	SBI  0x1A,1
000155 98da      	CBI  0x1B,2
000156 98d8      	CBI  0x1B,0
000157 98d9      	CBI  0x1B,1
000158 2e71      	MOV  R7,R17
000159 2fe1      	MOV  R30,R17
00015a 58e0      	SUBI R30,-LOW(128)
                +
00015b 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00015d 2fe1      	MOV  R30,R17
00015e 54e0      	SUBI R30,-LOW(192)
                +
00015f 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000161 e1a4      	LDI  R26,LOW(20)
000162 e0b0      	LDI  R27,0
000163 d02e      	RCALL _delay_ms
000164 d01c      	RCALL SUBOPT_0x2
000165 d01b      	RCALL SUBOPT_0x2
000166 d01a      	RCALL SUBOPT_0x2
000167 e2a0      	LDI  R26,LOW(32)
000168 df83      	RCALL __lcd_write_nibble_G100
                +
000169 e980     +LDI R24 , LOW ( 400 )
00016a e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
00016b 9701     +SBIW R24 , 1
00016c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
00016d e2a8      	LDI  R26,LOW(40)
00016e df92      	RCALL __lcd_write_data
00016f e0a4      	LDI  R26,LOW(4)
000170 df90      	RCALL __lcd_write_data
000171 e8a5      	LDI  R26,LOW(133)
000172 df8e      	RCALL __lcd_write_data
000173 e0a6      	LDI  R26,LOW(6)
000174 df8c      	RCALL __lcd_write_data
000175 dfab      	RCALL _lcd_clear
                 _0x2080001:
000176 9119      	LD   R17,Y+
000177 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x0:
000178 dfc5      	RCALL _lcd_putsf
000179 01d9      	MOVW R26,R18
00017a d017      	RCALL _delay_ms
00017b 5f1f      	SUBI R17,-1
00017c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00017d df83      	RCALL __lcd_write_data
00017e e0a3      	LDI  R26,LOW(3)
00017f e0b0      	LDI  R27,0
000180 c011      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
000181 e3a0      	LDI  R26,LOW(48)
000182 df69      	RCALL __lcd_write_nibble_G100
                +
000183 e980     +LDI R24 , LOW ( 400 )
000184 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000185 9701     +SBIW R24 , 1
000186 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000187 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
000188 933a      	ST   -Y,R19
                 __SAVELOCR3:
000189 932a      	ST   -Y,R18
                 __SAVELOCR2:
00018a 931a      	ST   -Y,R17
00018b 930a      	ST   -Y,R16
00018c 9508      	RET
                 
                 __LOADLOCR4:
00018d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00018e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00018f 8119      	LDD  R17,Y+1
000190 8108      	LD   R16,Y
000191 9508      	RET
                 
                 _delay_ms:
000192 9610      	adiw r26,0
000193 f039      	breq __delay_ms1
                 __delay_ms0:
000194 95a8      	wdr
                +
000195 ea80     +LDI R24 , LOW ( 0xFA0 )
000196 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000197 9701     +SBIW R24 , 1
000198 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000199 9711      	sbiw r26,1
00019a f7c9      	brne __delay_ms0
                 __delay_ms1:
00019b 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:  37 r18:   7 r19:   4 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   6 r26:  56 r27:  16 r28:   4 r29:   1 r30:  55 r31:   5 
x  :   3 y  :  35 z  :   9 
Registers used: 21 out of 35 (60.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  11 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   0 cpi   :   3 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  22 ld    :   6 ldd   :   6 ldi   :  83 
lds   :   0 lpm   :   9 lsl   :   0 lsr   :   0 mov   :  19 movw  :   6 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  12 pop   :   0 push  :   0 rcall :  50 ret   :  10 
reti  :   0 rjmp  :  19 rol   :   0 ror   :   0 sbc   :   0 sbci  :   2 
sbi   :  17 sbic  :  12 sbis  :   0 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  27 std   :   0 sts   :   2 sub   :   0 subi  :   5 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 36 out of 116 (31.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000338    772     52    824   32768   2.5%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
